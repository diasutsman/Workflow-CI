name: Heart Failure Model CI

on:
  push:
    branches: [main, master]
    paths:
      - "MLProject/**"
      - ".github/workflows/**"
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      run_name:
        description: "MLflow run name"
        required: true
        default: "CI-Triggered-Run"

jobs:
  train_model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow==2.19.0 scikit-learn pandas numpy matplotlib seaborn joblib

      - name: Configure MLflow tracking
        run: |
          # Create directories for MLflow tracking
          mkdir -p mlruns
          mkdir -p "$(pwd)/artifacts"
          chmod -R 777 "$(pwd)/artifacts"
          
          # Configure MLflow to use local directories
          export MLFLOW_TRACKING_URI="file:./mlruns"
          export MLFLOW_ARTIFACT_ROOT="file://$(pwd)/artifacts"
          
          # Set GitHub environment variables
          echo "MLFLOW_TRACKING_URI=$MLFLOW_TRACKING_URI" >> $GITHUB_ENV
          echo "MLFLOW_ARTIFACT_ROOT=$MLFLOW_ARTIFACT_ROOT" >> $GITHUB_ENV
          
          echo "Using MLflow tracking URI: $MLFLOW_TRACKING_URI"
          echo "Using MLflow artifact root: $MLFLOW_ARTIFACT_ROOT"
          
          # Create experiment
          python -c "
          import mlflow
          from mlflow.exceptions import MlflowException
          
          mlflow.set_tracking_uri('file:./mlruns')
          
          # Check if experiment exists first
          try:
              experiment = mlflow.get_experiment_by_name('Heart-Failure-Prediction')
              if experiment is None:
                  mlflow.create_experiment('Heart-Failure-Prediction')
                  print('Created new experiment: Heart-Failure-Prediction')
              else:
                  print('Using existing experiment: Heart-Failure-Prediction')
          except MlflowException:
              mlflow.create_experiment('Heart-Failure-Prediction')
              print('Created new experiment: Heart-Failure-Prediction')
          "

      - name: Run Heart Failure model training
        run: |
          cd MLProject
          python modelling.py --data_path="heart_failure_preprocessing/heart_failure_preprocessed.csv" --run_name="github-actions-run"

      - name: Upload MLflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-artifacts
          path: |
            mlruns
            artifacts
